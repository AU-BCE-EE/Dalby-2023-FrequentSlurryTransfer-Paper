floor_area = 22.09,
area = 22.09,
empty_int = 35,
temp_C = temp_dat_FF,
wash_water = 0,
wash_int = NA,
rest_d = 7,
RH = 90,
cover = NA,
resid_enrich = 0.9,
slopes = c(urea = NA, slurry_prod_rate = NA),
scale = c(ks_coefficient = opt_pars$scale.ks_coefficient,
qhat_opt = pars_test[i, 'qhat_opt'] * opt_pars$scale.qhat_opt,
xa_fresh = opt_pars$scale.xa_fresh, yield = 1,
alpha_opt = pars_test[i, 'alpha_opt'] * opt_pars$scale.alpha_opt))
man_pars_ST = list(conc_fresh = list(S2 = 0.01, urea = 2.4, SO4 = 0.2, TAN = 0.63,
VFA = 2.83, xa_dead = 0, VSd = 73.8), pH = 6.83, dens = 1000)
# C
days_sim <- max(meas_C$days[meas_C$period == 3 & !is.na(meas_C$mass)], na.rm = T) + 6
meas_C$day <- ceiling(meas_C$days)
dat_C <- as.data.frame(summarise(group_by(meas_C, day), CH4_emis_rate = mean(CH4_emis_rate, na.rm = TRUE), VFA_conc = mean(vfa / 1000 * 0.93, na.rm = TRUE)))
dat_C <- dat_C[dat_C$day <= ceiling(days_sim), ]
colnames(dat_C)[1] <- 'time'
times_C <- as.data.frame(merge(dat_C, slurry_mass_dat_C[which(slurry_mass_dat_C$time < max(dat_C$time)),], by = 'time', all = T))$time
pred_C <- cbind(abm(days = max(times_C[!is.na(times_C)]), times = times_C[!is.na(times_C)], man_pars = man_pars_C, mng_pars = mng_pars_C, grp_pars = grp_pars, evap_pars = evap_pars, wthr_pars = wthr_pars),i, treat = 'C')
pred_C_all <- rbind(pred_C_all, pred_C)
# FF
days_sim <- max(meas_FF$days[meas_FF$period == 3 & !is.na(meas_FF$mass)], na.rm = T) + 6
meas_FF$day <- ceiling(meas_FF$days)
dat_FF <- as.data.frame(summarise(group_by(meas_FF, day), CH4_emis_rate = mean(CH4_emis_rate, na.rm = TRUE), VFA_conc = mean(vfa / 1000 * 0.93, na.rm = TRUE)))
dat_FF <- dat_FF[dat_FF$day <= ceiling(days_sim), ]
colnames(dat_FF)[1] <- 'time'
times_FF <- as.data.frame(merge(dat_FF, slurry_mass_dat_FF[which(slurry_mass_dat_FF$time < max(dat_FF$time)),], by = 'time', all = T))$time
pred_FF <- cbind(abm(days = max(times_FF[!is.na(times_FF)]), times = times_FF[!is.na(times_FF)], man_pars = man_pars_FF, mng_pars = mng_pars_FF, grp_pars = grp_pars, evap_pars = evap_pars, wthr_pars = wthr_pars),i, treat = 'FF')
pred_FF_all <- rbind(pred_FF_all, pred_FF)
# SF
days_sim <- max(meas_SF$days[meas_SF$period == 3 & !is.na(meas_SF$mass)], na.rm = T) + 6
meas_SF$day <- ceiling(meas_SF$days)
dat_SF <- as.data.frame(summarise(group_by(meas_SF, day), CH4_emis_rate = mean(CH4_emis_rate, na.rm = TRUE), VFA_conc = mean(vfa / 1000 * 0.93, na.rm = TRUE)))
dat_SF <- dat_SF[dat_SF$day <= ceiling(days_sim), ]
colnames(dat_SF)[1] <- 'time'
times_SF <- as.data.frame(merge(dat_SF, slurry_mass_dat_SF[which(slurry_mass_dat_SF$time < max(dat_SF$time)),], by = 'time', all = T))$time
pred_SF <- cbind(abm(days = max(times_SF[!is.na(times_SF)]), times = times_SF[!is.na(times_SF)], man_pars = man_pars_SF, mng_pars = mng_pars_SF, grp_pars = grp_pars, evap_pars = evap_pars, wthr_pars = wthr_pars),i, treat = 'SF')
pred_SF_all <- rbind(pred_SF_all, pred_SF)
# ST
days_sim <- max(meas_ST$days[meas_ST$period == 3 & !is.na(meas_ST$mass)], na.rm = T) + 6
meas_ST$day <- ceiling(meas_ST$days)
dat_ST <- as.data.frame(summarise(group_by(meas_ST, day), CH4_emis_rate = mean(CH4_emis_rate, na.rm = TRUE), VFA_conc = mean(vfa / 1000 * 0.93, na.rm = TRUE)))
dat_ST <- dat_ST[dat_ST$day <= ceiling(days_sim), ]
colnames(dat_ST)[1] <- 'time'
times_ST <- as.data.frame(merge(dat_ST, slurry_mass_dat_ST[which(slurry_mass_dat_ST$time < max(dat_ST$time)),], by = 'time', all = T))$time
pred_ST <- cbind(abm(days = max(times_ST[!is.na(times_ST)]), times = times_ST[!is.na(times_ST)], man_pars = man_pars_ST, mng_pars = mng_pars_ST, grp_pars = grp_pars, evap_pars = evap_pars, wthr_pars = wthr_pars),i, treat = 'ST')
pred_ST_all <- rbind(pred_ST_all, pred_ST)
print(i)
}
pred_all <- NULL
dat <- read.csv('../data/pred_barn.csv')
pred_all <- NULL
for (o in c('C', 'FF', 'SF', 'ST')){
dat_sim <- dat[dat$treat == o,]
# time_rows for each alpha_opt and qhat_opt parameter set
end_rows <- c(which(diff(dat_sim$time) < 0), nrow(dat_sim))
start_rows <- end_rows - end_rows[1] + 1
time_rows <- data.frame(rbind(start_rows, end_rows))
pred_treat <- NULL
for (i in 1:ncol(time_rows)) {
# slurry mass handled and prepared for input
days <- 365 * 3
storage_dat <- dat_sim[time_rows[1,i]: time_rows[2,i],]
rem.rows <- which(diff(storage_dat$slurry_mass_eff) < 0)
times <- c(storage_dat$time[rem.rows], storage_dat$time[rem.rows] + (max(storage_dat$time[rem.rows]) + 6),
storage_dat$time[rem.rows] + 2 * (max(storage_dat$time[rem.rows])+6),
storage_dat$time[rem.rows] + 3 * (max(storage_dat$time[rem.rows])+6),
storage_dat$time[rem.rows] + 4 * (max(storage_dat$time[rem.rows])+6))
mass <- c(rep(storage_dat$slurry_mass_eff[rem.rows], 5))
slurry_mass_dat <- data.frame(time = times, slurry_mass = cumsum(mass))
slurry_mass_dat <- setNames(data.frame(approx(slurry_mass_dat$time, slurry_mass_dat$slurry_mass, xout = 1:days, method = 'constant')), c('time', 'slurry_mass'))
slurry_mass_dat <- slurry_app(days = days, start = 'June', stor_dat = data.frame(app1s = 0.1, app2s = 1, app_t1s = 'September', app_t2s = 'Marts'), from = 'storage', slurry = slurry_mass_dat)
slurry_mass_dat$slurry_mass[is.na(slurry_mass_dat$slurry_mass)] <- 0
# get concentrations of microbial populations in the slurry excreted to the storage
xa_fresh <- colMeans(storage_dat[rem.rows,grepl("m[0-9]_eff_conc|sr[0-9]_eff_conc", names(storage_dat))])
names(xa_fresh) <- textclean::mgsub(names(xa_fresh), c("xa_", "_eff_conc"), c("", ""))
# get concentrations of substrates in the slurry excreted to the storage
conc_fresh <- list(S2 = mean(storage_dat[rem.rows, "sulfide_eff_conc"]), urea = mean(storage_dat[rem.rows, "urea_eff_conc"]),
SO4 = mean(storage_dat[rem.rows, "sulfate_eff_conc"]), TAN = mean(storage_dat[rem.rows, "TAN_eff_conc"]),
VFA = mean(storage_dat[rem.rows, "VFA_eff_conc"]),
xa_dead = mean(storage_dat[rem.rows, "xa_dead_eff_conc"]),
VSd = mean(storage_dat[rem.rows, "VSd_eff_conc"]),
VSd_A = mean(storage_dat[rem.rows, 'VSd_A_eff_conc']))
# Management pars for the storage simulation with a tent on top (no water evap or rain).
# Surface area is adjusted to 6m2 to match the slurry volumes coming from the barn and still have an average
# slurry height around 2 m
# temp is changed to outside temps
mng_pars = list(slurry_prod_rate = 0,
slurry_mass = slurry_mass_dat,
storage_depth = 4,
resid_depth = 0.035,
floor_area = 0,
area = 20,
empty_int = 35,
temp_C = dat_temp,
wash_water = 0,
wash_int = NA,
rest_d = 7,
RH = 90,
cover = 'tent',
resid_enrich = 0,
slopes = c(urea = NA, slurry_prod_rate = NA),
scale = c(ks_coefficient = opt_pars$scale.ks_coefficient,
qhat_opt = pars_test[i, 'qhat_opt'] * opt_pars$scale.qhat_opt,
xa_fresh = opt_pars$scale.xa_fresh, yield = 1,
alpha_opt = pars_test[i, 'alpha_opt'] * opt_pars$scale.alpha_opt))
grp_pars = list(grps = c('m0','m1','m2', 'sr1'),
yield = c(default = 0.05, sr1 = 0.065),
xa_fresh = xa_fresh,
xa_init = c(all = 0.0001),
decay_rate = c(all = 0.02),
ks_coefficient = c(default = 1, sr1 = 0.4),
qhat_opt = c(m0 = 1.5, m1 = 3.6, m2 = 5.6 , m3 = 7.2, m4 = 8, m5 = 8, sr1 = 8),
T_opt = c(m0 = 18, m1 = 18, m2 = 28, m3 = 36, m4 = 43.75, m5 = 55, sr1 = 43.75),
T_min = c(m0 = 0, m1 = 10, m2 = 10, m3 = 15, m4 = 26.25, m5 = 30, sr1 = 0),
T_max = c(m0 = 25, m1 = 25, m2 = 38, m3 = 45, m4 = 51.25, m5 = 60, sr1 = 51.25),
ki_NH3_min = c(all = 0.015),
ki_NH3_max = c(all = 0.13),
ki_NH4_min = c(all = 2.7),
ki_NH4_max = c(all = 4.8),
pH_upr = c(all = 8.0),
pH_lwr = c(default = 6.0))
wthr_pars = list(temp_air_C = 20, RH = 90, rain = 0, pres_kpa = 101, rs = 10) # no rain due to cover
evap_pars = list(evap = 0 * et(temp_C = wthr_pars$temp_air_C, pres_kpa = wthr_pars$pres_kpa, rs = wthr_pars$rs)) # no evap due to cover
pred <- cbind(abm(days = days, times = sort(c(times[times <= days], 1:days)), wthr_pars = wthr_pars, evap_pars = evap_pars,
mng_pars = mng_pars, grp_pars = grp_pars, add_pars = list(conc_fresh = conc_fresh)), treat = o, i)
pred_treat <- rbind(pred_treat, pred)
print(i)
}
pred_all <- rbind(pred_all, pred_treat)
print(o)
}
path_fun <- '../ABM_functions/'
ff <- list.files(path = path_fun)
ff <- ff[ff != 'x.R']
for (i in ff) source(paste0(path_fun,i))
pred_all <- NULL
for (o in c('C', 'FF', 'SF', 'ST')){
dat_sim <- dat[dat$treat == o,]
# time_rows for each alpha_opt and qhat_opt parameter set
end_rows <- c(which(diff(dat_sim$time) < 0), nrow(dat_sim))
start_rows <- end_rows - end_rows[1] + 1
time_rows <- data.frame(rbind(start_rows, end_rows))
pred_treat <- NULL
for (i in 1:ncol(time_rows)) {
# slurry mass handled and prepared for input
days <- 365 * 3
storage_dat <- dat_sim[time_rows[1,i]: time_rows[2,i],]
rem.rows <- which(diff(storage_dat$slurry_mass_eff) < 0)
times <- c(storage_dat$time[rem.rows], storage_dat$time[rem.rows] + (max(storage_dat$time[rem.rows]) + 6),
storage_dat$time[rem.rows] + 2 * (max(storage_dat$time[rem.rows])+6),
storage_dat$time[rem.rows] + 3 * (max(storage_dat$time[rem.rows])+6),
storage_dat$time[rem.rows] + 4 * (max(storage_dat$time[rem.rows])+6))
mass <- c(rep(storage_dat$slurry_mass_eff[rem.rows], 5))
slurry_mass_dat <- data.frame(time = times, slurry_mass = cumsum(mass))
slurry_mass_dat <- setNames(data.frame(approx(slurry_mass_dat$time, slurry_mass_dat$slurry_mass, xout = 1:days, method = 'constant')), c('time', 'slurry_mass'))
slurry_mass_dat <- slurry_app(days = days, start = 'June', stor_dat = data.frame(app1s = 0.1, app2s = 1, app_t1s = 'September', app_t2s = 'Marts'), from = 'storage', slurry = slurry_mass_dat)
slurry_mass_dat$slurry_mass[is.na(slurry_mass_dat$slurry_mass)] <- 0
# get concentrations of microbial populations in the slurry excreted to the storage
xa_fresh <- colMeans(storage_dat[rem.rows,grepl("m[0-9]_eff_conc|sr[0-9]_eff_conc", names(storage_dat))])
names(xa_fresh) <- textclean::mgsub(names(xa_fresh), c("xa_", "_eff_conc"), c("", ""))
# get concentrations of substrates in the slurry excreted to the storage
conc_fresh <- list(S2 = mean(storage_dat[rem.rows, "sulfide_eff_conc"]), urea = mean(storage_dat[rem.rows, "urea_eff_conc"]),
SO4 = mean(storage_dat[rem.rows, "sulfate_eff_conc"]), TAN = mean(storage_dat[rem.rows, "TAN_eff_conc"]),
VFA = mean(storage_dat[rem.rows, "VFA_eff_conc"]),
xa_dead = mean(storage_dat[rem.rows, "xa_dead_eff_conc"]),
VSd = mean(storage_dat[rem.rows, "VSd_eff_conc"]),
VSd_A = mean(storage_dat[rem.rows, 'VSd_A_eff_conc']))
# Management pars for the storage simulation with a tent on top (no water evap or rain).
# Surface area is adjusted to 6m2 to match the slurry volumes coming from the barn and still have an average
# slurry height around 2 m
# temp is changed to outside temps
mng_pars = list(slurry_prod_rate = 0,
slurry_mass = slurry_mass_dat,
storage_depth = 4,
resid_depth = 0.035,
floor_area = 0,
area = 20,
empty_int = 35,
temp_C = dat_temp,
wash_water = 0,
wash_int = NA,
rest_d = 7,
RH = 90,
cover = 'tent',
resid_enrich = 0,
slopes = c(urea = NA, slurry_prod_rate = NA),
scale = c(ks_coefficient = opt_pars$scale.ks_coefficient,
qhat_opt = pars_test[i, 'qhat_opt'] * opt_pars$scale.qhat_opt,
xa_fresh = opt_pars$scale.xa_fresh, yield = 1,
alpha_opt = pars_test[i, 'alpha_opt'] * opt_pars$scale.alpha_opt))
grp_pars = list(grps = c('m0','m1','m2', 'sr1'),
yield = c(default = 0.05, sr1 = 0.065),
xa_fresh = xa_fresh,
xa_init = c(all = 0.0001),
decay_rate = c(all = 0.02),
ks_coefficient = c(default = 1, sr1 = 0.4),
qhat_opt = c(m0 = 1.5, m1 = 3.6, m2 = 5.6 , m3 = 7.2, m4 = 8, m5 = 8, sr1 = 8),
T_opt = c(m0 = 18, m1 = 18, m2 = 28, m3 = 36, m4 = 43.75, m5 = 55, sr1 = 43.75),
T_min = c(m0 = 0, m1 = 10, m2 = 10, m3 = 15, m4 = 26.25, m5 = 30, sr1 = 0),
T_max = c(m0 = 25, m1 = 25, m2 = 38, m3 = 45, m4 = 51.25, m5 = 60, sr1 = 51.25),
ki_NH3_min = c(all = 0.015),
ki_NH3_max = c(all = 0.13),
ki_NH4_min = c(all = 2.7),
ki_NH4_max = c(all = 4.8),
pH_upr = c(all = 8.0),
pH_lwr = c(default = 6.0))
wthr_pars = list(temp_air_C = 20, RH = 90, rain = 0, pres_kpa = 101, rs = 10) # no rain due to cover
evap_pars = list(evap = 0 * et(temp_C = wthr_pars$temp_air_C, pres_kpa = wthr_pars$pres_kpa, rs = wthr_pars$rs)) # no evap due to cover
pred <- cbind(abm(days = days, times = sort(c(times[times <= days], 1:days)), wthr_pars = wthr_pars, evap_pars = evap_pars,
mng_pars = mng_pars, grp_pars = grp_pars, add_pars = list(conc_fresh = conc_fresh)), treat = o, i)
pred_treat <- rbind(pred_treat, pred)
print(i)
}
pred_all <- rbind(pred_all, pred_treat)
print(o)
}
pred_all <- NULL
for (o in c('C', 'FF', 'SF', 'ST')){
dat_sim <- dat[dat$treat == o,]
# time_rows for each alpha_opt and qhat_opt parameter set
end_rows <- c(which(diff(dat_sim$time) < 0), nrow(dat_sim))
start_rows <- end_rows - end_rows[1] + 1
time_rows <- data.frame(rbind(start_rows, end_rows))
pred_treat <- NULL
for (i in 1:ncol(time_rows)) {
# slurry mass handled and prepared for input
days <- 365 * 3
storage_dat <- dat_sim[time_rows[1,i]: time_rows[2,i],]
rem.rows <- which(diff(storage_dat$slurry_mass_eff) < 0)
times <- c(storage_dat$time[rem.rows], storage_dat$time[rem.rows] + (max(storage_dat$time[rem.rows]) + 6),
storage_dat$time[rem.rows] + 2 * (max(storage_dat$time[rem.rows])+6),
storage_dat$time[rem.rows] + 3 * (max(storage_dat$time[rem.rows])+6),
storage_dat$time[rem.rows] + 4 * (max(storage_dat$time[rem.rows])+6))
mass <- c(rep(storage_dat$slurry_mass_eff[rem.rows], 5))
slurry_mass_dat <- data.frame(time = times, slurry_mass = cumsum(mass))
slurry_mass_dat <- setNames(data.frame(approx(slurry_mass_dat$time, slurry_mass_dat$slurry_mass, xout = 1:days, method = 'constant')), c('time', 'slurry_mass'))
slurry_mass_dat <- slurry_app(days = days, start = 'June', stor_dat = data.frame(app1s = 0.1, app2s = 1, app_t1s = 'September', app_t2s = 'March'), from = 'storage', slurry = slurry_mass_dat)
slurry_mass_dat$slurry_mass[is.na(slurry_mass_dat$slurry_mass)] <- 0
# get concentrations of microbial populations in the slurry excreted to the storage
xa_fresh <- colMeans(storage_dat[rem.rows,grepl("m[0-9]_eff_conc|sr[0-9]_eff_conc", names(storage_dat))])
names(xa_fresh) <- textclean::mgsub(names(xa_fresh), c("xa_", "_eff_conc"), c("", ""))
# get concentrations of substrates in the slurry excreted to the storage
conc_fresh <- list(S2 = mean(storage_dat[rem.rows, "sulfide_eff_conc"]), urea = mean(storage_dat[rem.rows, "urea_eff_conc"]),
SO4 = mean(storage_dat[rem.rows, "sulfate_eff_conc"]), TAN = mean(storage_dat[rem.rows, "TAN_eff_conc"]),
VFA = mean(storage_dat[rem.rows, "VFA_eff_conc"]),
xa_dead = mean(storage_dat[rem.rows, "xa_dead_eff_conc"]),
VSd = mean(storage_dat[rem.rows, "VSd_eff_conc"]),
VSd_A = mean(storage_dat[rem.rows, 'VSd_A_eff_conc']))
# Management pars for the storage simulation with a tent on top (no water evap or rain).
# Surface area is adjusted to 6m2 to match the slurry volumes coming from the barn and still have an average
# slurry height around 2 m
# temp is changed to outside temps
mng_pars = list(slurry_prod_rate = 0,
slurry_mass = slurry_mass_dat,
storage_depth = 4,
resid_depth = 0.035,
floor_area = 0,
area = 20,
empty_int = 35,
temp_C = dat_temp,
wash_water = 0,
wash_int = NA,
rest_d = 7,
RH = 90,
cover = 'tent',
resid_enrich = 0,
slopes = c(urea = NA, slurry_prod_rate = NA),
scale = c(ks_coefficient = opt_pars$scale.ks_coefficient,
qhat_opt = pars_test[i, 'qhat_opt'] * opt_pars$scale.qhat_opt,
xa_fresh = opt_pars$scale.xa_fresh, yield = 1,
alpha_opt = pars_test[i, 'alpha_opt'] * opt_pars$scale.alpha_opt))
grp_pars = list(grps = c('m0','m1','m2', 'sr1'),
yield = c(default = 0.05, sr1 = 0.065),
xa_fresh = xa_fresh,
xa_init = c(all = 0.0001),
decay_rate = c(all = 0.02),
ks_coefficient = c(default = 1, sr1 = 0.4),
qhat_opt = c(m0 = 1.5, m1 = 3.6, m2 = 5.6 , m3 = 7.2, m4 = 8, m5 = 8, sr1 = 8),
T_opt = c(m0 = 18, m1 = 18, m2 = 28, m3 = 36, m4 = 43.75, m5 = 55, sr1 = 43.75),
T_min = c(m0 = 0, m1 = 10, m2 = 10, m3 = 15, m4 = 26.25, m5 = 30, sr1 = 0),
T_max = c(m0 = 25, m1 = 25, m2 = 38, m3 = 45, m4 = 51.25, m5 = 60, sr1 = 51.25),
ki_NH3_min = c(all = 0.015),
ki_NH3_max = c(all = 0.13),
ki_NH4_min = c(all = 2.7),
ki_NH4_max = c(all = 4.8),
pH_upr = c(all = 8.0),
pH_lwr = c(default = 6.0))
wthr_pars = list(temp_air_C = 20, RH = 90, rain = 0, pres_kpa = 101, rs = 10) # no rain due to cover
evap_pars = list(evap = 0 * et(temp_C = wthr_pars$temp_air_C, pres_kpa = wthr_pars$pres_kpa, rs = wthr_pars$rs)) # no evap due to cover
pred <- cbind(abm(days = days, times = sort(c(times[times <= days], 1:days)), wthr_pars = wthr_pars, evap_pars = evap_pars,
mng_pars = mng_pars, grp_pars = grp_pars, add_pars = list(conc_fresh = conc_fresh)), treat = o, i)
pred_treat <- rbind(pred_treat, pred)
print(i)
}
pred_all <- rbind(pred_all, pred_treat)
print(o)
}
pred_all <- NULL
for (o in c('C', 'FF', 'SF', 'ST')){
dat_sim <- dat[dat$treat == o,]
# time_rows for each alpha_opt and qhat_opt parameter set
end_rows <- c(which(diff(dat_sim$time) < 0), nrow(dat_sim))
start_rows <- end_rows - end_rows[1] + 1
time_rows <- data.frame(rbind(start_rows, end_rows))
pred_treat <- NULL
for (i in 1:ncol(time_rows)) {
# slurry mass handled and prepared for input
days <- 365 * 3
storage_dat <- dat_sim[time_rows[1,i]: time_rows[2,i],]
rem.rows <- which(diff(storage_dat$slurry_mass_eff) < 0)
times <- c(storage_dat$time[rem.rows], storage_dat$time[rem.rows] + (max(storage_dat$time[rem.rows]) + 6),
storage_dat$time[rem.rows] + 2 * (max(storage_dat$time[rem.rows])+6),
storage_dat$time[rem.rows] + 3 * (max(storage_dat$time[rem.rows])+6),
storage_dat$time[rem.rows] + 4 * (max(storage_dat$time[rem.rows])+6))
mass <- c(rep(storage_dat$slurry_mass_eff[rem.rows], 5))
slurry_mass_dat <- data.frame(time = times, slurry_mass = cumsum(mass))
slurry_mass_dat <- setNames(data.frame(approx(slurry_mass_dat$time, slurry_mass_dat$slurry_mass, xout = 1:days, method = 'constant')), c('time', 'slurry_mass'))
slurry_mass_dat <- slurry_app(days = days, start = 'June', specs = data.frame(app1s = 0.1, app2s = 1, app_t1s = 'September', app_t2s = 'March'), from = 'storage', slurry = slurry_mass_dat)
slurry_mass_dat$slurry_mass[is.na(slurry_mass_dat$slurry_mass)] <- 0
# get concentrations of microbial populations in the slurry excreted to the storage
xa_fresh <- colMeans(storage_dat[rem.rows,grepl("m[0-9]_eff_conc|sr[0-9]_eff_conc", names(storage_dat))])
names(xa_fresh) <- textclean::mgsub(names(xa_fresh), c("xa_", "_eff_conc"), c("", ""))
# get concentrations of substrates in the slurry excreted to the storage
conc_fresh <- list(S2 = mean(storage_dat[rem.rows, "sulfide_eff_conc"]), urea = mean(storage_dat[rem.rows, "urea_eff_conc"]),
SO4 = mean(storage_dat[rem.rows, "sulfate_eff_conc"]), TAN = mean(storage_dat[rem.rows, "TAN_eff_conc"]),
VFA = mean(storage_dat[rem.rows, "VFA_eff_conc"]),
xa_dead = mean(storage_dat[rem.rows, "xa_dead_eff_conc"]),
VSd = mean(storage_dat[rem.rows, "VSd_eff_conc"]),
VSd_A = mean(storage_dat[rem.rows, 'VSd_A_eff_conc']))
# Management pars for the storage simulation with a tent on top (no water evap or rain).
# Surface area is adjusted to 6m2 to match the slurry volumes coming from the barn and still have an average
# slurry height around 2 m
# temp is changed to outside temps
mng_pars = list(slurry_prod_rate = 0,
slurry_mass = slurry_mass_dat,
storage_depth = 4,
resid_depth = 0.035,
floor_area = 0,
area = 20,
empty_int = 35,
temp_C = dat_temp,
wash_water = 0,
wash_int = NA,
rest_d = 7,
RH = 90,
cover = 'tent',
resid_enrich = 0,
slopes = c(urea = NA, slurry_prod_rate = NA),
scale = c(ks_coefficient = opt_pars$scale.ks_coefficient,
qhat_opt = pars_test[i, 'qhat_opt'] * opt_pars$scale.qhat_opt,
xa_fresh = opt_pars$scale.xa_fresh, yield = 1,
alpha_opt = pars_test[i, 'alpha_opt'] * opt_pars$scale.alpha_opt))
grp_pars = list(grps = c('m0','m1','m2', 'sr1'),
yield = c(default = 0.05, sr1 = 0.065),
xa_fresh = xa_fresh,
xa_init = c(all = 0.0001),
decay_rate = c(all = 0.02),
ks_coefficient = c(default = 1, sr1 = 0.4),
qhat_opt = c(m0 = 1.5, m1 = 3.6, m2 = 5.6 , m3 = 7.2, m4 = 8, m5 = 8, sr1 = 8),
T_opt = c(m0 = 18, m1 = 18, m2 = 28, m3 = 36, m4 = 43.75, m5 = 55, sr1 = 43.75),
T_min = c(m0 = 0, m1 = 10, m2 = 10, m3 = 15, m4 = 26.25, m5 = 30, sr1 = 0),
T_max = c(m0 = 25, m1 = 25, m2 = 38, m3 = 45, m4 = 51.25, m5 = 60, sr1 = 51.25),
ki_NH3_min = c(all = 0.015),
ki_NH3_max = c(all = 0.13),
ki_NH4_min = c(all = 2.7),
ki_NH4_max = c(all = 4.8),
pH_upr = c(all = 8.0),
pH_lwr = c(default = 6.0))
wthr_pars = list(temp_air_C = 20, RH = 90, rain = 0, pres_kpa = 101, rs = 10) # no rain due to cover
evap_pars = list(evap = 0 * et(temp_C = wthr_pars$temp_air_C, pres_kpa = wthr_pars$pres_kpa, rs = wthr_pars$rs)) # no evap due to cover
pred <- cbind(abm(days = days, times = sort(c(times[times <= days], 1:days)), wthr_pars = wthr_pars, evap_pars = evap_pars,
mng_pars = mng_pars, grp_pars = grp_pars, add_pars = list(conc_fresh = conc_fresh)), treat = o, i)
pred_treat <- rbind(pred_treat, pred)
print(i)
}
pred_all <- rbind(pred_all, pred_treat)
print(o)
}
path_fun <- '../ABM_functions/'
ff <- list.files(path = path_fun)
ff <- ff[ff != 'x.R']
for (i in ff) source(paste0(path_fun,i))
pred_all <- NULL
for (o in c('C', 'FF', 'SF', 'ST')){
dat_sim <- dat[dat$treat == o,]
# time_rows for each alpha_opt and qhat_opt parameter set
end_rows <- c(which(diff(dat_sim$time) < 0), nrow(dat_sim))
start_rows <- end_rows - end_rows[1] + 1
time_rows <- data.frame(rbind(start_rows, end_rows))
pred_treat <- NULL
for (i in 1:ncol(time_rows)) {
# slurry mass handled and prepared for input
days <- 365 * 3
storage_dat <- dat_sim[time_rows[1,i]: time_rows[2,i],]
rem.rows <- which(diff(storage_dat$slurry_mass_eff) < 0)
times <- c(storage_dat$time[rem.rows], storage_dat$time[rem.rows] + (max(storage_dat$time[rem.rows]) + 6),
storage_dat$time[rem.rows] + 2 * (max(storage_dat$time[rem.rows])+6),
storage_dat$time[rem.rows] + 3 * (max(storage_dat$time[rem.rows])+6),
storage_dat$time[rem.rows] + 4 * (max(storage_dat$time[rem.rows])+6))
mass <- c(rep(storage_dat$slurry_mass_eff[rem.rows], 5))
slurry_mass_dat <- data.frame(time = times, slurry_mass = cumsum(mass))
slurry_mass_dat <- setNames(data.frame(approx(slurry_mass_dat$time, slurry_mass_dat$slurry_mass, xout = 1:days, method = 'constant')), c('time', 'slurry_mass'))
slurry_mass_dat <- slurry_app(days = days, start = 'June', specs = data.frame(app1s = 0.1, app2s = 1, app_t1s = 'September', app_t2s = 'March'), from = 'storage', slurry = slurry_mass_dat)
slurry_mass_dat$slurry_mass[is.na(slurry_mass_dat$slurry_mass)] <- 0
# get concentrations of microbial populations in the slurry excreted to the storage
xa_fresh <- colMeans(storage_dat[rem.rows,grepl("m[0-9]_eff_conc|sr[0-9]_eff_conc", names(storage_dat))])
names(xa_fresh) <- textclean::mgsub(names(xa_fresh), c("xa_", "_eff_conc"), c("", ""))
# get concentrations of substrates in the slurry excreted to the storage
conc_fresh <- list(S2 = mean(storage_dat[rem.rows, "sulfide_eff_conc"]), urea = mean(storage_dat[rem.rows, "urea_eff_conc"]),
SO4 = mean(storage_dat[rem.rows, "sulfate_eff_conc"]), TAN = mean(storage_dat[rem.rows, "TAN_eff_conc"]),
VFA = mean(storage_dat[rem.rows, "VFA_eff_conc"]),
xa_dead = mean(storage_dat[rem.rows, "xa_dead_eff_conc"]),
VSd = mean(storage_dat[rem.rows, "VSd_eff_conc"]),
VSd_A = mean(storage_dat[rem.rows, 'VSd_A_eff_conc']))
# Management pars for the storage simulation with a tent on top (no water evap or rain).
# Surface area is adjusted to 6m2 to match the slurry volumes coming from the barn and still have an average
# slurry height around 2 m
# temp is changed to outside temps
mng_pars = list(slurry_prod_rate = 0,
slurry_mass = slurry_mass_dat,
storage_depth = 4,
resid_depth = 0.035,
floor_area = 0,
area = 20,
empty_int = 35,
temp_C = dat_temp,
wash_water = 0,
wash_int = NA,
rest_d = 7,
RH = 90,
cover = 'tent',
resid_enrich = 0,
slopes = c(urea = NA, slurry_prod_rate = NA),
scale = c(ks_coefficient = opt_pars$scale.ks_coefficient,
qhat_opt = pars_test[i, 'qhat_opt'] * opt_pars$scale.qhat_opt,
xa_fresh = opt_pars$scale.xa_fresh, yield = 1,
alpha_opt = pars_test[i, 'alpha_opt'] * opt_pars$scale.alpha_opt))
grp_pars = list(grps = c('m0','m1','m2', 'sr1'),
yield = c(default = 0.05, sr1 = 0.065),
xa_fresh = xa_fresh,
xa_init = c(all = 0.0001),
decay_rate = c(all = 0.02),
ks_coefficient = c(default = 1, sr1 = 0.4),
qhat_opt = c(m0 = 1.5, m1 = 3.6, m2 = 5.6 , m3 = 7.2, m4 = 8, m5 = 8, sr1 = 8),
T_opt = c(m0 = 18, m1 = 18, m2 = 28, m3 = 36, m4 = 43.75, m5 = 55, sr1 = 43.75),
T_min = c(m0 = 0, m1 = 10, m2 = 10, m3 = 15, m4 = 26.25, m5 = 30, sr1 = 0),
T_max = c(m0 = 25, m1 = 25, m2 = 38, m3 = 45, m4 = 51.25, m5 = 60, sr1 = 51.25),
ki_NH3_min = c(all = 0.015),
ki_NH3_max = c(all = 0.13),
ki_NH4_min = c(all = 2.7),
ki_NH4_max = c(all = 4.8),
pH_upr = c(all = 8.0),
pH_lwr = c(default = 6.0))
wthr_pars = list(temp_air_C = 20, RH = 90, rain = 0, pres_kpa = 101, rs = 10) # no rain due to cover
evap_pars = list(evap = 0 * et(temp_C = wthr_pars$temp_air_C, pres_kpa = wthr_pars$pres_kpa, rs = wthr_pars$rs)) # no evap due to cover
pred <- cbind(abm(days = days, times = sort(c(times[times <= days], 1:days)), wthr_pars = wthr_pars, evap_pars = evap_pars,
mng_pars = mng_pars, grp_pars = grp_pars, add_pars = list(conc_fresh = conc_fresh)), treat = o, i)
pred_treat <- rbind(pred_treat, pred)
print(i)
}
pred_all <- rbind(pred_all, pred_treat)
print(o)
}
slurry_mass_dat
pred_all <- NULL
o = 'C'
dat_sim <- dat[dat$treat == o,]
end_rows <- c(which(diff(dat_sim$time) < 0), nrow(dat_sim))
start_rows <- end_rows - end_rows[1] + 1
time_rows <- data.frame(rbind(start_rows, end_rows))
pred_treat <- NULL
time_rows
1:ncol(time_rows)
i = 1
# slurry mass handled and prepared for input
days <- 365 * 3
storage_dat <- dat_sim[time_rows[1,i]: time_rows[2,i],]
rem.rows <- which(diff(storage_dat$slurry_mass_eff) < 0)
times <- c(storage_dat$time[rem.rows], storage_dat$time[rem.rows] + (max(storage_dat$time[rem.rows]) + 6),
storage_dat$time[rem.rows] + 2 * (max(storage_dat$time[rem.rows])+6),
storage_dat$time[rem.rows] + 3 * (max(storage_dat$time[rem.rows])+6),
storage_dat$time[rem.rows] + 4 * (max(storage_dat$time[rem.rows])+6))
mass <- c(rep(storage_dat$slurry_mass_eff[rem.rows], 5))
slurry_mass_dat <- data.frame(time = times, slurry_mass = cumsum(mass))
slurry_mass_dat <- setNames(data.frame(approx(slurry_mass_dat$time, slurry_mass_dat$slurry_mass, xout = 1:days, method = 'constant')), c('time', 'slurry_mass'))
slurry_mass_dat
plot(slurry_mass_dat$time, slurry_mass_dat$slurry_mass)
days
years <- floor(days/365)
if(from == 'storage'){
a <- 's'
}
from = 'storage'
if(from == 'storage'){
a <- 's'
}
if(from == 'digestate'){
a <- 'd'
}
mon <- specs[, grepl(paste('^app_t[0-9]', a, sep=""), names(specs))]
specs = data.frame(app1s = 0.1, app2s = 1, app_t1s = 'September', app_t2s = 'March')
mon <- specs[, grepl(paste('^app_t[0-9]', a, sep=""), names(specs))]
View(mon)
apps <- doy(month = mon, start = start)$day
doy(month = mon, start = start)
