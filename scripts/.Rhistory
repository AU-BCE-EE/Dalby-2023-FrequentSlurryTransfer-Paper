wash_dates_SF <-ymd_hms(c("2020-08-13 07:00:00 UTC", "2020-11-04 07:00:00 UTC", "2021-01-27 07:00:00 UTC"))
slurry_mass_dat_SF$wash_water <- 0
slurry_mass_dat_SF$wash_water[slurry_mass_dat_SF$date %in% wash_dates_SF] <- 3500
slurry_mass_dat_SF$date <- NULL
slurry_mass_dat_SF <- slurry_mass_dat_SF[!duplicated(slurry_mass_dat_SF),]
temp_dat_SF <- meas_FF[!is.na(meas_FF$temp), c('time', 'temp')]
temp_dat_SF <- data.frame(data.table::data.table(temp_dat_SF)[, .(time = mean(time), temp = mean(temp)), by = .(timebin = floor(time / 1))])[,-c(1)]
meas_ST$time <- meas_ST$days
meas_ST$slurry_mass <- meas_ST$mass
slurry_mass_dat_ST <- meas_ST[!is.na(meas_ST$mass), c('date', 'time', 'slurry_mass')]
wash_dates_ST <-ymd_hms(c("2020-08-13 02:00:00 UTC", "2020-11-05 02:00:00 UTC", "2021-01-28 02:00:00 UTC"))
slurry_mass_dat_ST$wash_water <- 0
slurry_mass_dat_ST$wash_water[slurry_mass_dat_ST$date %in% wash_dates_ST] <- 3500
slurry_mass_dat_ST$date <- NULL
slurry_mass_dat_ST <- slurry_mass_dat_ST[!duplicated(slurry_mass_dat_ST),]
temp_dat_ST <- meas_FF[!is.na(meas_FF$temp), c('time', 'temp')]
temp_dat_ST <- data.frame(data.table::data.table(temp_dat_ST)[, .(time = mean(time), temp = mean(temp)), by = .(timebin = floor(time / 1))])[,-c(1)]
wthr_pars = list(temp_air_C = 20, RH = 90, rain = 0, pres_kpa = 101, rs = 10)
evap_pars = list(evap = 0.5 * et(temp_C = wthr_pars$temp_air_C, pres_kpa = wthr_pars$pres_kpa, rs = wthr_pars$rs))
grz_pars = list(graze_start = "May",
graze_days = 0,
graze_hours = 0)
grp_pars = list(grps = c('m0','m1','m2', 'sr1'),
yield = c(default = 0.05, sr1 = 0.065),
xa_fresh = c(default = 0.02),
xa_init = c(all = 0.0001),
decay_rate = c(all = 0.02),
ks_coefficient = c(default = 1, sr1 = 0.4),
qhat_opt = c(m0 = 1.5, m1 = 3.6, m2 = 5.6 , m3 = 7.2, m4 = 8, m5 = 8, sr1 = 8),
T_opt = c(m0 = 18, m1 = 18, m2 = 28, m3 = 36, m4 = 43.75, m5 = 55, sr1 = 43.75),
T_min = c(m0 = 0, m1 = 10, m2 = 10, m3 = 15, m4 = 26.25, m5 = 30, sr1 = 0),
T_max = c(m0 = 25, m1 = 25, m2 = 38, m3 = 45, m4 = 51.25, m5 = 60, sr1 = 51.25),
ki_NH3_min = c(all = 0.015),
ki_NH3_max = c(all = 0.13),
ki_NH4_min = c(all = 2.7),
ki_NH4_max = c(all = 4.8),
pH_upr = c(all = 8.0),
pH_lwr = c(default = 6.0))
mic_pars = list(ks_SO4 = 0.0067,
ki_H2S_meth = 0.23,
ki_H2S_sr = 0.25,
alpha_opt = c(xa_dead= 0.02, urea = 70, VSd = 0.02),
alpha_T_min = c(xa_dead= 0, urea = 0, VSd = 0),
alpha_T_opt = c(xa_dead= 50, urea = 50, VSd = 50),
alpha_T_max = c(xa_dead= 60, urea = 60, VSd = 60))
chem_pars = list(COD_conv = c(CH4 = 0.2507, xa_dead = 0.73,
VFA = 0.93, S = 0.5015, VS = 0.69, CO2_anaer = 0.53, CO2_aer = 1.1, CO2_sr = 1.2, CO2_ureo = 1.57,
C_xa_dead = 0.358, C_VFA = 0.374, C_VSd = 0.344, C_N_urea = 0.429),
kl = c(NH3 = 52, NH3_floor = 22, H2S = 0.02))
vars <- c(0.2, 0.3, 0.5, 0.7, 0.9, 1, 1.25, 1.5, 2, 3, 4, 5)
l <- length(vars)
pars_test <- data.frame(alpha_opt = c(vars, vars, rep(1, l)),
qhat_opt = c(vars, rep(1, l), vars))
pred_C_all <- NULL
pred_FF_all <- NULL
pred_SF_all <- NULL
pred_ST_all <- NULL
dat <- read.csv('../data/pred_barn.csv')
pred_all <- NULL
o <- 'C'
dat_sim <- dat[dat$treat == o,]
end_rows <- c(which(diff(dat_sim$time) < 0), nrow(dat_sim))
start_rows <- end_rows - end_rows[1] + 1
time_rows <- data.frame(rbind(start_rows, end_rows))
pred_treat <- NULL
time_rows
i <- 6
# slurry mass handled and prepared for input
days <- 365 * 3
storage_dat <- dat_sim[time_rows[1,i]: time_rows[2,i],]
rem.rows <- which(diff(storage_dat$slurry_mass_eff) < 0)
times <- c(storage_dat$time[rem.rows], storage_dat$time[rem.rows] + (max(storage_dat$time[rem.rows]) + 6),
storage_dat$time[rem.rows] + 2 * (max(storage_dat$time[rem.rows])+6),
storage_dat$time[rem.rows] + 3 * (max(storage_dat$time[rem.rows])+6),
storage_dat$time[rem.rows] + 4 * (max(storage_dat$time[rem.rows])+6))
mass <- c(rep(storage_dat$slurry_mass_eff[rem.rows], 5))
slurry_mass_dat <- data.frame(time = times, slurry_mass = cumsum(mass))
slurry_mass_dat <- setNames(data.frame(approx(slurry_mass_dat$time, slurry_mass_dat$slurry_mass, xout = 1:days, method = 'constant')), c('time', 'slurry_mass'))
slurry_mass_dat <- slurry_app(days = days, begin = 'June', specs = data.frame(app1s = 0.1, app2s = 1, app_t1s = 'September', app_t2s = 'March'), from = 'storage', slurry = slurry_mass_dat)
slurry_mass_dat$slurry_mass[is.na(slurry_mass_dat$slurry_mass)] <- 0
# get concentrations of microbial populations in the slurry excreted to the storage
xa_fresh <- colMeans(storage_dat[rem.rows,grepl("m[0-9]_eff_conc|sr[0-9]_eff_conc", names(storage_dat))])
names(xa_fresh) <- textclean::mgsub(names(xa_fresh), c("xa_", "_eff_conc"), c("", ""))
# get concentrations of substrates in the slurry excreted to the storage
conc_fresh <- list(S2 = mean(storage_dat[rem.rows, "sulfide_eff_conc"]), urea = mean(storage_dat[rem.rows, "urea_eff_conc"]),
SO4 = mean(storage_dat[rem.rows, "sulfate_eff_conc"]), TAN = mean(storage_dat[rem.rows, "TAN_eff_conc"]),
VFA = mean(storage_dat[rem.rows, "VFA_eff_conc"]),
xa_dead = mean(storage_dat[rem.rows, "xa_dead_eff_conc"]),
VSd = mean(storage_dat[rem.rows, "VSd_eff_conc"]),
VSd_A = mean(storage_dat[rem.rows, 'VSd_A_eff_conc']))
mng_pars = list(slurry_prod_rate = 0,
slurry_mass = slurry_mass_dat,
storage_depth = 4,
resid_depth = 0.035,
floor_area = 0,
area = 20,
empty_int = 35,
temp_C = dat_temp,
wash_water = 0,
wash_int = NA,
rest_d = 7,
RH = 90,
cover = 'tent',
resid_enrich = 0,
slopes = c(urea = NA, slurry_prod_rate = NA),
scale = c(ks_coefficient = opt_pars$scale.ks_coefficient,
qhat_opt = pars_test[i, 'qhat_opt'] * opt_pars$scale.qhat_opt,
xa_fresh = opt_pars$scale.xa_fresh, yield = 1,
alpha_opt = pars_test[i, 'alpha_opt'] * opt_pars$scale.alpha_opt))
grp_pars = list(grps = c('m0','m1','m2', 'sr1'),
yield = c(default = 0.05, sr1 = 0.065),
xa_fresh = xa_fresh,
xa_init = c(all = 0.0001),
decay_rate = c(all = 0.02),
ks_coefficient = c(default = 1, sr1 = 0.4),
qhat_opt = c(m0 = 1.5, m1 = 3.6, m2 = 5.6 , m3 = 7.2, m4 = 8, m5 = 8, sr1 = 8),
T_opt = c(m0 = 18, m1 = 18, m2 = 28, m3 = 36, m4 = 43.75, m5 = 55, sr1 = 43.75),
T_min = c(m0 = 0, m1 = 10, m2 = 10, m3 = 15, m4 = 26.25, m5 = 30, sr1 = 0),
T_max = c(m0 = 25, m1 = 25, m2 = 38, m3 = 45, m4 = 51.25, m5 = 60, sr1 = 51.25),
ki_NH3_min = c(all = 0.015),
ki_NH3_max = c(all = 0.13),
ki_NH4_min = c(all = 2.7),
ki_NH4_max = c(all = 4.8),
pH_upr = c(all = 8.0),
pH_lwr = c(default = 6.0))
wthr_pars = list(temp_air_C = 20, RH = 90, rain = 0, pres_kpa = 101, rs = 10) # no rain due to cover
evap_pars = list(evap = 0 * et(temp_C = wthr_pars$temp_air_C, pres_kpa = wthr_pars$pres_kpa, rs = wthr_pars$rs)) # no evap due to cover
pred <- cbind(abm(days = days, times = sort(c(times[times <= days], 1:days)), wthr_pars = wthr_pars, evap_pars = evap_pars,
mng_pars = mng_pars, grp_pars = grp_pars, add_pars = list(conc_fresh = conc_fresh)), treat = o, i)
control <- pred
o <- 'FF'
dat_sim <- dat[dat$treat == o,]
end_rows <- c(which(diff(dat_sim$time) < 0), nrow(dat_sim))
start_rows <- end_rows - end_rows[1] + 1
time_rows <- data.frame(rbind(start_rows, end_rows))
pred_treat <- NULL
i <- 6
# slurry mass handled and prepared for input
days <- 365 * 3
storage_dat <- dat_sim[time_rows[1,i]: time_rows[2,i],]
rem.rows <- which(diff(storage_dat$slurry_mass_eff) < 0)
times <- c(storage_dat$time[rem.rows], storage_dat$time[rem.rows] + (max(storage_dat$time[rem.rows]) + 6),
storage_dat$time[rem.rows] + 2 * (max(storage_dat$time[rem.rows])+6),
storage_dat$time[rem.rows] + 3 * (max(storage_dat$time[rem.rows])+6),
storage_dat$time[rem.rows] + 4 * (max(storage_dat$time[rem.rows])+6))
mass <- c(rep(storage_dat$slurry_mass_eff[rem.rows], 5))
slurry_mass_dat <- data.frame(time = times, slurry_mass = cumsum(mass))
slurry_mass_dat <- setNames(data.frame(approx(slurry_mass_dat$time, slurry_mass_dat$slurry_mass, xout = 1:days, method = 'constant')), c('time', 'slurry_mass'))
slurry_mass_dat <- slurry_app(days = days, begin = 'June', specs = data.frame(app1s = 0.1, app2s = 1, app_t1s = 'September', app_t2s = 'March'), from = 'storage', slurry = slurry_mass_dat)
slurry_mass_dat$slurry_mass[is.na(slurry_mass_dat$slurry_mass)] <- 0
# get concentrations of microbial populations in the slurry excreted to the storage
xa_fresh <- colMeans(storage_dat[rem.rows,grepl("m[0-9]_eff_conc|sr[0-9]_eff_conc", names(storage_dat))])
names(xa_fresh) <- textclean::mgsub(names(xa_fresh), c("xa_", "_eff_conc"), c("", ""))
# get concentrations of substrates in the slurry excreted to the storage
conc_fresh <- list(S2 = mean(storage_dat[rem.rows, "sulfide_eff_conc"]), urea = mean(storage_dat[rem.rows, "urea_eff_conc"]),
SO4 = mean(storage_dat[rem.rows, "sulfate_eff_conc"]), TAN = mean(storage_dat[rem.rows, "TAN_eff_conc"]),
VFA = mean(storage_dat[rem.rows, "VFA_eff_conc"]),
xa_dead = mean(storage_dat[rem.rows, "xa_dead_eff_conc"]),
VSd = mean(storage_dat[rem.rows, "VSd_eff_conc"]),
VSd_A = mean(storage_dat[rem.rows, 'VSd_A_eff_conc']))
mng_pars = list(slurry_prod_rate = 0,
slurry_mass = slurry_mass_dat,
storage_depth = 4,
resid_depth = 0.035,
floor_area = 0,
area = 20,
empty_int = 35,
temp_C = dat_temp,
wash_water = 0,
wash_int = NA,
rest_d = 7,
RH = 90,
cover = 'tent',
resid_enrich = 0,
slopes = c(urea = NA, slurry_prod_rate = NA),
scale = c(ks_coefficient = opt_pars$scale.ks_coefficient,
qhat_opt = pars_test[i, 'qhat_opt'] * opt_pars$scale.qhat_opt,
xa_fresh = opt_pars$scale.xa_fresh, yield = 1,
alpha_opt = pars_test[i, 'alpha_opt'] * opt_pars$scale.alpha_opt))
grp_pars = list(grps = c('m0','m1','m2', 'sr1'),
yield = c(default = 0.05, sr1 = 0.065),
xa_fresh = xa_fresh,
xa_init = c(all = 0.0001),
decay_rate = c(all = 0.02),
ks_coefficient = c(default = 1, sr1 = 0.4),
qhat_opt = c(m0 = 1.5, m1 = 3.6, m2 = 5.6 , m3 = 7.2, m4 = 8, m5 = 8, sr1 = 8),
T_opt = c(m0 = 18, m1 = 18, m2 = 28, m3 = 36, m4 = 43.75, m5 = 55, sr1 = 43.75),
T_min = c(m0 = 0, m1 = 10, m2 = 10, m3 = 15, m4 = 26.25, m5 = 30, sr1 = 0),
T_max = c(m0 = 25, m1 = 25, m2 = 38, m3 = 45, m4 = 51.25, m5 = 60, sr1 = 51.25),
ki_NH3_min = c(all = 0.015),
ki_NH3_max = c(all = 0.13),
ki_NH4_min = c(all = 2.7),
ki_NH4_max = c(all = 4.8),
pH_upr = c(all = 8.0),
pH_lwr = c(default = 6.0))
wthr_pars = list(temp_air_C = 20, RH = 90, rain = 0, pres_kpa = 101, rs = 10) # no rain due to cover
evap_pars = list(evap = 0 * et(temp_C = wthr_pars$temp_air_C, pres_kpa = wthr_pars$pres_kpa, rs = wthr_pars$rs)) # no evap due to cover
pred <- cbind(abm(days = days, times = sort(c(times[times <= days], 1:days)), wthr_pars = wthr_pars, evap_pars = evap_pars,
mng_pars = mng_pars, grp_pars = grp_pars, add_pars = list(conc_fresh = conc_fresh)), treat = o, i)
weekly <- pred
control
weekly
o <- 'SF'
dat_sim <- dat[dat$treat == o,]
end_rows <- c(which(diff(dat_sim$time) < 0), nrow(dat_sim))
start_rows <- end_rows - end_rows[1] + 1
time_rows <- data.frame(rbind(start_rows, end_rows))
pred_treat <- NULL
i = 6
# slurry mass handled and prepared for input
days <- 365 * 3
storage_dat <- dat_sim[time_rows[1,i]: time_rows[2,i],]
rem.rows <- which(diff(storage_dat$slurry_mass_eff) < 0)
times <- c(storage_dat$time[rem.rows], storage_dat$time[rem.rows] + (max(storage_dat$time[rem.rows]) + 6),
storage_dat$time[rem.rows] + 2 * (max(storage_dat$time[rem.rows])+6),
storage_dat$time[rem.rows] + 3 * (max(storage_dat$time[rem.rows])+6),
storage_dat$time[rem.rows] + 4 * (max(storage_dat$time[rem.rows])+6))
mass <- c(rep(storage_dat$slurry_mass_eff[rem.rows], 5))
slurry_mass_dat <- data.frame(time = times, slurry_mass = cumsum(mass))
slurry_mass_dat <- setNames(data.frame(approx(slurry_mass_dat$time, slurry_mass_dat$slurry_mass, xout = 1:days, method = 'constant')), c('time', 'slurry_mass'))
slurry_mass_dat <- slurry_app(days = days, begin = 'June', specs = data.frame(app1s = 0.1, app2s = 1, app_t1s = 'September', app_t2s = 'March'), from = 'storage', slurry = slurry_mass_dat)
slurry_mass_dat$slurry_mass[is.na(slurry_mass_dat$slurry_mass)] <- 0
# get concentrations of microbial populations in the slurry excreted to the storage
xa_fresh <- colMeans(storage_dat[rem.rows,grepl("m[0-9]_eff_conc|sr[0-9]_eff_conc", names(storage_dat))])
names(xa_fresh) <- textclean::mgsub(names(xa_fresh), c("xa_", "_eff_conc"), c("", ""))
# get concentrations of substrates in the slurry excreted to the storage
conc_fresh <- list(S2 = mean(storage_dat[rem.rows, "sulfide_eff_conc"]), urea = mean(storage_dat[rem.rows, "urea_eff_conc"]),
SO4 = mean(storage_dat[rem.rows, "sulfate_eff_conc"]), TAN = mean(storage_dat[rem.rows, "TAN_eff_conc"]),
VFA = mean(storage_dat[rem.rows, "VFA_eff_conc"]),
xa_dead = mean(storage_dat[rem.rows, "xa_dead_eff_conc"]),
VSd = mean(storage_dat[rem.rows, "VSd_eff_conc"]),
VSd_A = mean(storage_dat[rem.rows, 'VSd_A_eff_conc']))
mng_pars = list(slurry_prod_rate = 0,
slurry_mass = slurry_mass_dat,
storage_depth = 4,
resid_depth = 0.035,
floor_area = 0,
area = 20,
empty_int = 35,
temp_C = dat_temp,
wash_water = 0,
wash_int = NA,
rest_d = 7,
RH = 90,
cover = 'tent',
resid_enrich = 0,
slopes = c(urea = NA, slurry_prod_rate = NA),
scale = c(ks_coefficient = opt_pars$scale.ks_coefficient,
qhat_opt = pars_test[i, 'qhat_opt'] * opt_pars$scale.qhat_opt,
xa_fresh = opt_pars$scale.xa_fresh, yield = 1,
alpha_opt = pars_test[i, 'alpha_opt'] * opt_pars$scale.alpha_opt))
grp_pars = list(grps = c('m0','m1','m2', 'sr1'),
yield = c(default = 0.05, sr1 = 0.065),
xa_fresh = xa_fresh,
xa_init = c(all = 0.0001),
decay_rate = c(all = 0.02),
ks_coefficient = c(default = 1, sr1 = 0.4),
qhat_opt = c(m0 = 1.5, m1 = 3.6, m2 = 5.6 , m3 = 7.2, m4 = 8, m5 = 8, sr1 = 8),
T_opt = c(m0 = 18, m1 = 18, m2 = 28, m3 = 36, m4 = 43.75, m5 = 55, sr1 = 43.75),
T_min = c(m0 = 0, m1 = 10, m2 = 10, m3 = 15, m4 = 26.25, m5 = 30, sr1 = 0),
T_max = c(m0 = 25, m1 = 25, m2 = 38, m3 = 45, m4 = 51.25, m5 = 60, sr1 = 51.25),
ki_NH3_min = c(all = 0.015),
ki_NH3_max = c(all = 0.13),
ki_NH4_min = c(all = 2.7),
ki_NH4_max = c(all = 4.8),
pH_upr = c(all = 8.0),
pH_lwr = c(default = 6.0))
wthr_pars = list(temp_air_C = 20, RH = 90, rain = 0, pres_kpa = 101, rs = 10) # no rain due to cover
evap_pars = list(evap = 0 * et(temp_C = wthr_pars$temp_air_C, pres_kpa = wthr_pars$pres_kpa, rs = wthr_pars$rs)) # no evap due to cover
pred <- cbind(abm(days = days, times = sort(c(times[times <= days], 1:days)), wthr_pars = wthr_pars, evap_pars = evap_pars,
mng_pars = mng_pars, grp_pars = grp_pars, add_pars = list(conc_fresh = conc_fresh)), treat = o, i)
slurryfunnels <- pred
o <- 'ST'
dat_sim <- dat[dat$treat == o,]
end_rows <- c(which(diff(dat_sim$time) < 0), nrow(dat_sim))
start_rows <- end_rows - end_rows[1] + 1
time_rows <- data.frame(rbind(start_rows, end_rows))
pred_treat <- NULL
i = 6
# slurry mass handled and prepared for input
days <- 365 * 3
storage_dat <- dat_sim[time_rows[1,i]: time_rows[2,i],]
rem.rows <- which(diff(storage_dat$slurry_mass_eff) < 0)
times <- c(storage_dat$time[rem.rows], storage_dat$time[rem.rows] + (max(storage_dat$time[rem.rows]) + 6),
storage_dat$time[rem.rows] + 2 * (max(storage_dat$time[rem.rows])+6),
storage_dat$time[rem.rows] + 3 * (max(storage_dat$time[rem.rows])+6),
storage_dat$time[rem.rows] + 4 * (max(storage_dat$time[rem.rows])+6))
mass <- c(rep(storage_dat$slurry_mass_eff[rem.rows], 5))
slurry_mass_dat <- data.frame(time = times, slurry_mass = cumsum(mass))
slurry_mass_dat <- setNames(data.frame(approx(slurry_mass_dat$time, slurry_mass_dat$slurry_mass, xout = 1:days, method = 'constant')), c('time', 'slurry_mass'))
slurry_mass_dat <- slurry_app(days = days, begin = 'June', specs = data.frame(app1s = 0.1, app2s = 1, app_t1s = 'September', app_t2s = 'March'), from = 'storage', slurry = slurry_mass_dat)
slurry_mass_dat$slurry_mass[is.na(slurry_mass_dat$slurry_mass)] <- 0
# get concentrations of microbial populations in the slurry excreted to the storage
xa_fresh <- colMeans(storage_dat[rem.rows,grepl("m[0-9]_eff_conc|sr[0-9]_eff_conc", names(storage_dat))])
names(xa_fresh) <- textclean::mgsub(names(xa_fresh), c("xa_", "_eff_conc"), c("", ""))
# get concentrations of substrates in the slurry excreted to the storage
conc_fresh <- list(S2 = mean(storage_dat[rem.rows, "sulfide_eff_conc"]), urea = mean(storage_dat[rem.rows, "urea_eff_conc"]),
SO4 = mean(storage_dat[rem.rows, "sulfate_eff_conc"]), TAN = mean(storage_dat[rem.rows, "TAN_eff_conc"]),
VFA = mean(storage_dat[rem.rows, "VFA_eff_conc"]),
xa_dead = mean(storage_dat[rem.rows, "xa_dead_eff_conc"]),
VSd = mean(storage_dat[rem.rows, "VSd_eff_conc"]),
VSd_A = mean(storage_dat[rem.rows, 'VSd_A_eff_conc']))
mng_pars = list(slurry_prod_rate = 0,
slurry_mass = slurry_mass_dat,
storage_depth = 4,
resid_depth = 0.035,
floor_area = 0,
area = 20,
empty_int = 35,
temp_C = dat_temp,
wash_water = 0,
wash_int = NA,
rest_d = 7,
RH = 90,
cover = 'tent',
resid_enrich = 0,
slopes = c(urea = NA, slurry_prod_rate = NA),
scale = c(ks_coefficient = opt_pars$scale.ks_coefficient,
qhat_opt = pars_test[i, 'qhat_opt'] * opt_pars$scale.qhat_opt,
xa_fresh = opt_pars$scale.xa_fresh, yield = 1,
alpha_opt = pars_test[i, 'alpha_opt'] * opt_pars$scale.alpha_opt))
grp_pars = list(grps = c('m0','m1','m2', 'sr1'),
yield = c(default = 0.05, sr1 = 0.065),
xa_fresh = xa_fresh,
xa_init = c(all = 0.0001),
decay_rate = c(all = 0.02),
ks_coefficient = c(default = 1, sr1 = 0.4),
qhat_opt = c(m0 = 1.5, m1 = 3.6, m2 = 5.6 , m3 = 7.2, m4 = 8, m5 = 8, sr1 = 8),
T_opt = c(m0 = 18, m1 = 18, m2 = 28, m3 = 36, m4 = 43.75, m5 = 55, sr1 = 43.75),
T_min = c(m0 = 0, m1 = 10, m2 = 10, m3 = 15, m4 = 26.25, m5 = 30, sr1 = 0),
T_max = c(m0 = 25, m1 = 25, m2 = 38, m3 = 45, m4 = 51.25, m5 = 60, sr1 = 51.25),
ki_NH3_min = c(all = 0.015),
ki_NH3_max = c(all = 0.13),
ki_NH4_min = c(all = 2.7),
ki_NH4_max = c(all = 4.8),
pH_upr = c(all = 8.0),
pH_lwr = c(default = 6.0))
wthr_pars = list(temp_air_C = 20, RH = 90, rain = 0, pres_kpa = 101, rs = 10) # no rain due to cover
evap_pars = list(evap = 0 * et(temp_C = wthr_pars$temp_air_C, pres_kpa = wthr_pars$pres_kpa, rs = wthr_pars$rs)) # no evap due to cover
pred <- cbind(abm(days = days, times = sort(c(times[times <= days], 1:days)), wthr_pars = wthr_pars, evap_pars = evap_pars,
mng_pars = mng_pars, grp_pars = grp_pars, add_pars = list(conc_fresh = conc_fresh)), treat = o, i)
slurrytrays <- pred
library(dplyr)
library(tidyr)
dat_bind <- bind_rows(control, weekly, slurryfunnels, slurrytrays)
dat_bind$temp_C
dat_bind <- bind_rows(control, weekly, slurryfunnels, slurrytrays) %>% select(time, slurry_mass, CH4_emis_rate, temp_C)
write.xlsx(dat_bind, 'dat_bind.xlsx')
dat_bind <- bind_rows(control, weekly, slurryfunnels, slurrytrays) %>% select(time, slurry_mass, CH4_emis_rate, temp_C, treat)
dat_bind$treat
write.xlsx(dat_bind, 'dat_bind.xlsx')
write.xlsx(dat_bind, 'dat_bind.xlsx')
pars_test
rm(list = ls())
library(lubridate)
library(dplyr)
library(tidyr)
library(ggplot2)
library(purrr)
library(scales)
# load and combine flow rate dat
flow_dat <- NULL
ff_flows <- list.files('./flow_dat', pattern = '.txt', full.names = TRUE)
for (i in ff_flows){
flow_dat <- bind_rows(flow_dat, read.csv(i, header = T, sep = "\t"))
}
flow_dat <- flow_dat %>% select(-X)
names(flow_dat) <- c('datetime', 'flow6', 'flow5')
flow_dat <- flow_dat %>% pivot_longer(c('flow5', 'flow6'), values_to = 'flow', names_to = 'MPVPosition') %>%
mutate(MPVPosition = sub('flow5',1, MPVPosition)) %>%
mutate(MPVPosition = sub('flow6',3, MPVPosition), datetime = as.POSIXct(datetime, format = "%Y-%m-%d %H:%M:%S"))
rm(list = ls())
# Load packages
library('dplyr')
library('tidyr')
library('readxl')
library('reshape2')
# Load data
dat <- read.csv('../data/dat_stacked.csv')
install.packages('reshape2')
library('reshape2')
# Load data
dat <- read.csv('../data/dat_stacked.csv')
dat_odor <- read_excel('../data/dat_comp.xlsx', sheet = "odor")
# Some cleaning
dat_odor$treatment <- tolower(dat_odor$treatment)
dat_odor <- rename(dat_odor, H2S = M35E)
# Period two in raw dat of odor is actually period 4 in other datasets. Correct here
dat_odor$period[dat_odor$period == 2] <- 4
# Drop obs with no periods
dat <- subset(dat, !is.na(period))
# Convert date/times to dates
dat$date.time <- dat$date
dat$date <- as.Date(dat$date)
dat_odor$date.time <- dat_odor$date
dat_odor$date <- as.Date(dat_odor$date)
# Add pig numbers to odor data by date now
# Note that some odor obs are dropped--dates must be missing in pigs data (would be better to interpolate pig numbers and not lose odor measurements)
pigs <- summarise(group_by(dat, period, treatment, date), pigs = mean(pigs, na.rm = TRUE))
dat_odor <- merge(dat_odor, pigs, by = c('period', 'treatment', 'date'))
# Reshape for summary
dl <- melt(dat, id.vars = c('date.time', 'date', 'treatment', 'period', 'pigs'),
measure.vars = c('CH4_rate', 'CH4_emis_rate', 'NH3_emis_rate', 'CO2E', 'CO2_emis_rate'))
# Normalize to "per pig"
# Apparently CO2 is already per pig
dl$value[!grepl('CO2', dl$variable)] <- (dl$value / dl$pigs)[!grepl('CO2', dl$variable)]
# Reshape odor
dol <- melt(dat_odor, id.vars = c('date.time', 'date', 'treatment', 'period', 'pigs'),
measure.vars = c('H2S', 'OAVE'))
# Calculate per pig per d only for H2S (not odor)
dol$value[dol$variable == 'H2S'] <- (dol$value / dol$pigs)[dol$variable == 'H2S']
# Combine odor data with other emission data and drop missing values
dl <- rbind(dl, dol)
dl <- subset(dl, !is.na(value))
# Summarise by period
emis_summ <- summarise(group_by(dl, variable, treatment, period), mn = mean(value), n = length(value))
# Summarise over full year (4 periods)
emis_summ_yr <- summarise(group_by(emis_summ, variable, treatment), amn = mean(mn), s = sd(mn), n = length(mn))
# Get full year emission reductions
emis_summ_yr <- mutate(group_by(emis_summ_yr, variable), amn.control = amn[treatment == 'control'],
rel.red = round(100 * (amn.control - amn) / amn.control, 1))
rm(list = ls())
source('../scripts/process_data.R')
library('dplyr')
library('tidyr')
comp_summary <- summarise(group_by(dat_analysis, period, treatment), DM = mean(DM, na.rm = TRUE), VS = mean(VS, na.rm = TRUE),
pH = mean(pH, na.rm = TRUE), TN = mean(TN, na.rm = TRUE), TAN = mean(TAN, na.rm = TRUE))
comp_summary_year <- summarise(group_by(comp_summary, treatment), mean_DM = mean(DM, na.rm = TRUE), mean_VS = mean(VS, na.rm = TRUE),
mean_pH = mean(pH, na.rm = TRUE), mean_TN = mean(TN, na.rm = TRUE), mean_TAN = mean(TAN, na.rm = TRUE),
sd_DM = sd(DM, na.rm = TRUE), sd_VS = sd(VS, na.rm = TRUE),
sd_pH = sd(pH, na.rm = TRUE), sd_TN = sd(TN, na.rm = TRUE), sd_TAN = sd(TAN, na.rm = TRUE))
vfa_dat_sum <- summarise(group_by(dat_vfa, period, treatment), vfa = mean(vfa/1000, na.rm = TRUE))
vfa_summary <- summarise(group_by(vfa_dat_sum, treatment), mean = mean(vfa, na.rm = TRUE), std = sd(vfa, na.rm = TRUE))
temp_summary <- summarise(group_by(dat_stacked, period, treatment), temp_air = mean(temp_air, na.rm = TRUE), temp = mean(temp, na.rm = TRUE))
temp_summary_year <- summarise(group_by(temp_summary, treatment), mean_temp_air = mean(temp_air, na.rm = TRUE), mean_temp = mean(temp, na.rm = TRUE),
std_temp_air = sd(temp_air, na.rm = TRUE), std_temp = sd(temp, na.rm = TRUE))
write.csv(comp_summary, '../output/comp_summary.csv', row.names = FALSE)
write.csv(comp_summary_year, '../output/comp_summary_year.csv', row.names = FALSE)
write.csv(temp_summary, '../output/temp_summary.csv', row.names = FALSE)
write.csv(temp_summary_year, '../output/temp_summary_year.csv', row.names = FALSE)
slurry_retention_dat = NULL
for (w in 1:4){
treat_dat = NULL
for (o in c('control', 'frequentflushing', 'slurryfunnels', 'slurrytrays')){
test_dat <- dat_mass[which(dat_mass$period == w & dat_mass$treatment == o),]
time = NULL
mass_age = NULL
ave_time = NULL
for (i in 2:nrow(test_dat)){
if(test_dat$mass[i] > test_dat$mass[i-1]){
mass_age1 <- test_dat$mass[i] - test_dat$mass[i-1]
time1 <- (test_dat$date[i] - test_dat$date[i-1])
if(i == 2 | i == 3){
ave_time1 <- time1/2
} else {
ave_time1 <- (time1 * mass_age1/(mass_age[i-2] + mass_age1) + (time[i-2] + time1) * mass_age[i-2] / (mass_age[i-2] + mass_age1))/2
}
} else if (test_dat$mass[i] < test_dat$mass[i-1]) {
mass_age1 <- test_dat$mass[i]
time1 <- test_dat$date[i] - test_dat$date[i-2]
if(i == 2 | i == 3){
ave_time1 <- time1/2
} else {
ave_time1 <- time1 - time[i-2] + ave_time[i-2]
}
}
time <- rbind(time, time1)
mass_age <- rbind(mass_age, mass_age1)
ave_time <- rbind(ave_time, ave_time1)
mass_weighed <- mass_age * ave_time
ret_time <- rbind(sum(mass_weighed)/sum(mass_age))
}
treat_dat <- rbind(treat_dat, ret_time)
}
slurry_retention_dat <- cbind(slurry_retention_dat, treat_dat)
}
colnames(slurry_retention_dat) <- c(1,2,3,4)
rownames(slurry_retention_dat) <- c('control', 'frequentflushing', 'slurryfunnels', 'slurrytrays')
write.csv(slurry_retention_dat, '../output/slurry_retention.csv', row.names = FALSE)
C.mean <- mean(slurry_retention_dat[1,])
WF.mean <- mean(slurry_retention_dat[2,])
SF.mean <- mean(slurry_retention_dat[3,])
ST.mean <- mean(slurry_retention_dat[4,])
C.sd <- sd(slurry_retention_dat[1,])
WF.sd <- sd(slurry_retention_dat[2,])
SF.sd <- sd(slurry_retention_dat[3,])
ST.sd <- sd(slurry_retention_dat[4,])
mass_summary <- dat_stacked %>% select(mass, period, treatment) %>% filter(!is.na(mass), !is.na(period)) %>%
group_by(treatment, period) %>% summarise(mass.mean = mean(mass, na.rm =T)) %>% group_by(treatment) %>%
summarise(mass_sd = sd(mass.mean, na.rm = TRUE), mass.mean = mean(mass.mean, na.rm = T))
write.csv(mass_summary, '../output/slurry_mass_summary.csv', row.names = FALSE)
read_excel('../data/sorted_data_average.xlsx', Sheet = 'Balance_data')
read_excel('../data/sorted_data_average.xlsx', sheet = 'Balance_data')
N_balance <- read_excel('../data/sorted_data_average.xlsx', sheet = 'Balance_data')
View(N_balance)
N_balance
N.summary <- N_balance %>% mutate(ingested_N_pig_day = ingested_N*1000/days/pigs, excreted_N_pig_day = excreted_N*1000/days/pigs)
View(N.summary)
N.summary <- N_balance %>%
mutate(ingested_N_pig_day = ingested_N*1000/days/pigs, excreted_N_pig_day = excreted_N*1000/days/pigs) %>%
group_by(treatment) %>% summarise(ingested_N_pig_day_mean = mean(ingested_N_pig_day),
ingested_N_pig_day_sd = sd(ingested_N_pig_day),
excreted_N_pig_day_mean = mean(excreted_N_pig_day),
excreted_N_pig_day_sd = sd(excreted_N_pig_day))
View(N.summary)
N.summary <- N_balance %>%
mutate(ingested_N_pig_day = ingested_N*1000/days/pigs, excreted_N_pig_day = excreted_N*1000/days/pigs) %>%
group_by(treatment) %>% summarise(ingested_N_g_per_pig_day_mean = mean(ingested_N_pig_day),
ingested_N_g_per_pig_day_sd = sd(ingested_N_pig_day),
excreted_N_g_per_pig_day_mean = mean(excreted_N_pig_day),
excreted_N_g_per_pig_day_sd = sd(excreted_N_pig_day))
write.csv(N.summary, '../output/N_balance_summary.csv', row.names = FALSE)
